#pragma once

#include "utils.h"

// --------- EXACT MERGE ----------------
//
// Merge the clusters generated by the rcpp_exact_initial. Seperate class and
// routines to allow results from rcpp_exact_initial to be returned and cached
// for subsequent re-merging.

namespace ex_merge {

struct OneCluster
{
    int id, n;
    double dist_sum, dist_max;
    std::vector <utils::OneEdge> edges;
};

struct OneMerge
{
    int cli, clj;
    double merge_dist;
};

struct ExMergeDat
{
    // cl2index_map is from cluster numbers to indices in clusters
    std::unordered_map <int, index_t> cl2index_map;
    std::vector <OneCluster> clusters;
    std::vector <utils::OneEdge> edges; // edges between clusters
    std::vector <OneMerge> merges;
};

void init (const Rcpp::DataFrame &gr, ExMergeDat &cldat);
OneMerge merge (ExMergeDat &cldat,
        int clfrom_i,
        int clto_i,
        index_t ei);
void single (ExMergeDat &cldat);
void avg (ExMergeDat &cldat);
void max (ExMergeDat &cldat);

} // end namespace ex_merge

Rcpp::IntegerVector rcpp_exact_merge (
        const Rcpp::DataFrame gr,
        const int ncl,
        const std::string method);
